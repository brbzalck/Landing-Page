.intro-content {
    /* Colocando a div que contem texto e imagem em posição relativa ao menu */
    position: relative;
    /* Subindo para cima -3rem o conteúdo da div */
    /* top: -3rem; */
    /* Display grid para fazer texto e imagem */
    display: grid;
    /* 1fr para o texto 1.5fr para a imagem */
    grid-template-columns: 1fr 1.5fr;
    gap: var(--gap);
    /* Colocando o mínimo de altura 100vh para uma section não invadir a outra */
    min-height: 100vh;
}
/* Usando o display flex dentro de uma grid(intro-content) para alinhar o texto no meio */
.intro-text-content, .intro-img {
    display: flex;
    /* Mesmo com display flex, segue flow em coluna e enrolado(block)*/
    flex-flow: column wrap;
    /* Para enfim alinhar o conteúdo ao centro */
    justify-content: center;
}

.intro-text-content h2 {
    margin-top: 6rem;
    margin-bottom: 1rem;
    /* Definindo altura da linha */
    line-height: 1;
}

.intro-text-content p {
    word-wrap: break-word;
}

.intro-img img,
.intro-img svg {
    max-width: 100%;
    height: auto;
}


.top3-content {
    /* Display flex, para ajustar o conteúdo ao centro */
    display: flex;
    /* flex em coluna e enrolado */
    flex-flow: column nowrap;
    /* A partir do flex flow consigo alinhar ao centro com justify e align */
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    max-width: 100%;
    /* 800px para o texto */
    max-width: 80rem;
    text-align: center;
}

.top3-content h2, h6 {
    margin-bottom: 2rem;
    margin-top: 2rem;
}

.grid-one-content {
    min-height: 100vh;
    display: flex;
    flex-flow: column wrap;
    justify-content: center;
}

.grid-one-content h3 {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 3rem;
    margin-top: 3rem;
}

.grid-main-heading {
    margin-bottom: 1rem;
    padding-top: 3rem;
}

.grid-description {
    padding-bottom: 5rem;
}

.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 3rem;
    counter-reset: grid-counter;
}

.grid h3 {
    font-size: 3rem;
    /* Colocando position relative no h3, para segurar o position absolute abaixo */
    position: relative;
    padding-left: 5rem;
    padding-bottom: 1rem;
}

.grid h3::before {
    counter-increment: grid-counter;
    content: counter(grid-counter);
    position: absolute;
    font-size: 8rem;
    font-style: italic;
    top: -3rem;
    left: -1rem;
    transform: rotate(5deg);
}

.grid .spacing {
    margin-right: 20rem;
}

.grid .spacing-2 {
    margin-right: 15rem;
}

.grid .spacing-3 {
    margin-right: 10rem;
}

.gallery-img {
    width: 100%;
    max-width: 36rem;
    max-height: 36rem;
    overflow: hidden;
}

.gallery-img img {
    width: 100%;
    height: 100%;
    transition: all 300ms ease-in-out;
}

.gallery-img img:hover {
    transform: translate(-3%, 3%) scale(1.2) rotate(5deg);
}

.gallery-description {
    padding-bottom: 1rem;
}
/*  */
.contact-form {
    grid-column: span 2;
}

.contact-form .form-grid {
    border: none;
    display: flex;
    flex-flow: row wrap;
    gap: var(--gap);
}

.form-grid legend {
    font-style: italic;
    font-size: 3rem;
    margin-bottom: 3.7rem;
}

.form-group { 
     /* Ajustando o conteúdo com flex  */
     flex: 1 1 50rem;
} 

.form-group label {
    display: block;
    margin-bottom: 1rem;
}

.form-group input,
.form-group textarea {
    border: none;
    background-color: var(--white);
    padding: 1.5rem 2rem;
    width: 100%;
    font-size: 1.6rem;
    outline: none;

}

.form-group input:focus,
.form-group textarea:focus {
    box-shadow: 0 0 5px 5px darkcyan;
}

/* Sobrescrevendo especificidade com div & nome da classe */
div.full-width {
    width: 100%;
    flex: 1 1 100%;
}

.form-group button {
    border: 0.1rem solid var(--primary-color);
    background: none;
    color: var(--primary-color);
    font-style: italic;
    padding: 1.5rem 2rem;
    font-size: 3rem;
    cursor: pointer;
    transition: all 300ms ease-in-out;
}

.form-group button:hover {
    border: var(--white);
    background-color: var(--white);
    color: var(--primary-color);
}

.footer {
    text-align: center;
    font-size: 1.6rem;
}

.footer a {
    color: var(--primary-color);
}

.heart {
    color: red;
}

footer p {
    margin: 0;
    padding: 3rem;
}

.close-menu {
    display: none;
}

.back-to-top {
    position: fixed;
    bottom: 2rem;
    right: 1rem;
    background-color: var(--white);
    width: 8rem;
    height: 8rem;
    font-size: 6rem;
    display: flex;
    background: none;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    color: var(--primary-color);
    transform: rotate(-90deg);
    text-shadow: -2px 2px 5px var(--white);
}

@media (max-width: 800px) {
    .intro-content, .grid {
        grid-template-columns: 1fr;
    }
    .span-media-two {
        grid-column: span 2;
    }
    .gallery-img {
        width: 100%;
        max-width: 100%;
        max-height: 100%;
    }
    .gallery-img img{
        width: 100%;
    }
    .menu {
        bottom: 0;
        text-align: center;
    }
    .menu-content, .menu-content ul {
        flex-direction: column;
        justify-content: center;
    }
    .menu-content {
        height: 100vh;
    }

    .menu {
        display: none;
    }

    .close-menu-label::after {
        content: '☰';
        position: fixed;
        border: 0.1rem solid var(--primary-color);
        z-index: 2;
        top: 2rem;
        right: 2rem;
        font-size: 3rem;
        line-height: 3rem;
        width: 3rem;
        height: 3rem;
        text-align: center;
        padding: 0.5rem;
        cursor: pointer;
    }

    /* × */
    .close-menu:checked~.menu {
        display: block;
    }

    .close-menu:checked~.close-menu-label::after {
        display: block;
        content: '×';
    }

    .menu-spacing {
        display: none;
    }
}